{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","Signup","document","getElementById","style","width","display","Login","close","className","id","href","onClick","for","type","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f05c0e5d.chunk.js","sourcesContent":["import React,{useState} from \"react\";\nconst App = ()=>{\n  const openNav = ()=>{\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n  };\n  const closeNav = ()=>{\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  };\n  const Signup=()=>{\n    document.getElementById(\"myModal\").style.width=\"400px\";\n    document.getElementById(\"myModal\").style.display=\"block\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.getElementById(\"login\").style.display=\"none\";\n    document.getElementById(\"forgetpassword\").style.display = \"none\";\n  }\n  const Login=()=>{\n    document.getElementById(\"login\").style.width=\"400px\";\n    document.getElementById(\"login\").style.display=\"block\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.getElementById(\"myModal\").style.display=\"none\";\n    document.getElementById(\"forgetpassword\").style.display = \"none\";\n  }\n\n  const forgetpassword=()=>{\n    document.getElementById(\"forgetpassword\").style.width=\"400px\";\n    document.getElementById(\"forgetpassword\").style.display=\"block\";\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.getElementById(\"login\").style.width=\"0\";\n    document.getElementById(\"login\").style.display=\"none\";\n    document.getElementById(\"myModal\").style.display=\"none\";\n\n\n  }\n  const close=()=>{\n    document.getElementById(\"myModal\").style.display = \"none\";\n    document.getElementById(\"login\").style.display = \"none\";\n    document.getElementById(\"forgetpassword\").style.display = \"none\";\n  }\n    return(\n      <>\n        <div className=\"mainbody\">\n          <div id=\"mySidenav\" className=\"sidenav\">\n            <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={closeNav}>&times;</a>\n            <a href=\"#\" className=\"mt-5\">Home</a>\n            <a href=\"#\">Find Experts</a>\n            <a href=\"#\">Astrology</a>\n            <a href=\"#\">Health & Fitness</a>\n            <a href=\"#\">Law</a>\n            <a href=\"#\" onClick={Login} className=\"mt-5\">Login</a>\n            <a href=\"#\" onClick={Signup}>Signup</a>\n            <a href=\"#\">Become an Expert</a>\n          </div>\n          <div className=\"navcross1\">\n             <span className=\"navcross\"  onClick={openNav}>&#9776; </span>\n          </div>\n\n        {/*    Signup myModal        */}\n\n          <div className=\"container col-md-4 col-xm-6 signup\" id=\"myModal\">\n            <form>\n              <a href=\"javascript:void(0)\" className=\"closebtn2\" onClick={close}>&times;</a>\n              <div className=\"text-center\"><h3>Register</h3></div>\n              <div className=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Name</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Name\" />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Email</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Email\" />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Password</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Password\" />\n              </div>\n              <button className=\"btn btn-primary w-100\">Register</button>\n              <p className=\"mt-3\">Have an account?<a href=\"#\" onClick={Login}>Login</a></p>\n             </form>\n            </div>\n\n         {/*    Login myModal        */}\n\n\n         <div className=\"container col-md-4 col-xm-6 login\" id=\"login\">\n            <form>\n              <a href=\"javascript:void(0)\" className=\"closebtn2\" onClick={close}>&times;</a>\n              <div className=\"text-center\"><h3>Welcome Back!</h3></div>\n              <div className=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Email</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Password</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\"  />\n              </div>\n              <button className=\"btn btn-primary w-100\">Login</button>\n              <p className=\"mt-3\">Do not have an account? <a href=\"#\" onClick={Signup}>Register</a></p>\n              <p className=\"mt-3\">Forget Password? <a href=\"#\" onClick={forgetpassword}>Forget Password</a></p>\n             </form>\n          </div>\n\n          {/*    forgetpassword         */}\n\n\n          <div className=\"container col-md-3 col-xm-3 forgetpassword\"  id=\"forgetpassword\">\n            <form>\n              <a href=\"javascript:void(0)\" className=\"closebtn2\" onClick={close}>&times;</a>\n              <div className=\"text-center\"><h3>Forget Password ? </h3></div>\n              <p>Enter below the email that you used to login through to get a password reset code</p>\n              <div className=\"form-group\">\n                <label for=\"exampleFormControlInput1\">Email</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" />\n              </div>              \n              <button className=\"btn btn-primary w-100\">Register</button>\n              <p className=\"mt-3\">Do not have an account? <a href=\"#\" onClick={Signup}>Register</a></p>\n              <p className=\"mt-3\">Remember Password? <a href=\"#\"  onClick={Login}>Login</a></p>\n             </form>\n          </div>      \n        </div>     \n      </>\n    )\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}